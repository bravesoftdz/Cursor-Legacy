UNIT TP;
{$M 8192,0,0}
{$M 4000,0,45000}
INTERFACE
USES
    CRT,DOS;
CONST
     MESES1:ARRAY[1..12] OF STRING=('JANEIRO','FEVEREIRO','MARÄO','ABRIL',
                                   'MAIO','JUNHO','JULHO','AGOSTO',
                                   'SETEMBRO','OUTUBRO','NOVEMBRO','DEZEMBRO');
     MESES2:ARRAY[1..12] OF STRING=('JAN','FEV','MAR','ABR','MAI','JUN',
                                   'JUL','AGO','SET','OUT','NOV','DEZ');
     MOUSE:ARRAY[1..4] OF INTEGER=($00,$01,$02,$33);
TYPE
    TMEM_VID=RECORD
                   CAR:CHAR;
                   ATT:BYTE;
             END;
VAR
   I,J,AH,AL:LONGINT;
   CH:CHAR;
   S,R:STRING;
   LOG:BOOLEAN;
   REGS:REGISTERS;
   SCREEN:ARRAY[1..80,1..25] OF TMEM_VID ABSOLUTE $B800:0000;

   {NOMES DOS PROCEDIMENTOS}

PROCEDURE LN(X:BYTE);
PROCEDURE FILLSCR(X1,Y1,X2,Y2,FUNDO:BYTE);
PROCEDURE DARKER(X1,Y1,X2,Y2,TEXTO,FUNDO:BYTE);
PROCEDURE WRITEXY(FRASE:STRING;X,Y:BYTE);
PROCEDURE PRINTXY(FRASE:STRING;VEL,X,Y:BYTE;SND:BOOLEAN);
PROCEDURE PRINTDN(FRASE:STRING;VEL,X,Y:BYTE;SND:BOOLEAN);
PROCEDURE SHOWMOUSE;
PROCEDURE HIDEMOUSE;
PROCEDURE CURSOR(ESTADO:BYTE);
PROCEDURE PAUSE;
PROCEDURE EXECUTE(COMMAND:STRING);
PROCEDURE SND(FREQ,DEL:WORD);
PROCEDURE NO(DEL:WORD);
PROCEDURE BEEP;
PROCEDURE PHONE(DEL:WORD);
PROCEDURE HORIZONTAL(X,Y,COMP:BYTE;S1:STRING);
PROCEDURE VERTICAL(X,Y,COMP,INT:BYTE;S1:STRING);
PROCEDURE CANTOS(X,Y:BYTE;CH1:CHAR);
PROCEDURE LOGOTIPO(PROGRAMA:STRING;ANO:WORD);
{PROCEDURE KMUSIC(MODULE:STRING;VOLUME,SOUNDDEVICE,TIMERSPEED,SBDMA,SBIRQ,SBPORT:WORD);
PROCEDURE MUSIC(MODULE:STRING;VOLUME:WORD);
PROCEDURE NOMUSIC;  }

   {NOMES DAS FUNÄÂES}

FUNCTION LOCASE(CARACTER:CHAR):CHAR;

         {PROCEDIMENTOS & FUNÄÂES}

IMPLEMENTATION

PROCEDURE LN(X:BYTE);
BEGIN
     GOTOXY(X,WHEREY+1);
END;
PROCEDURE FILLSCR(X1,Y1,X2,Y2,FUNDO:BYTE);
{$S-}
BEGIN
     TEXTBACKGROUND(FUNDO);
     WINDOW(X1,Y1,X2,Y2);
     CLRSCR;
END;
PROCEDURE DARKER(X1,Y1,X2,Y2,TEXTO,FUNDO:BYTE);
VAR
   X3,Y3:BYTE;
BEGIN
     FOR Y3:=Y1 TO Y2 DO
         FOR X3:=X1 TO X2 DO
             SCREEN[X3,Y3].ATT:=16*FUNDO+TEXTO;
END;
PROCEDURE WRITEXY(FRASE:STRING;X,Y:BYTE);
{$S-}
BEGIN
     GOTOXY(X,Y);
     WRITE(FRASE);
END;
PROCEDURE PRINTXY(FRASE:STRING;VEL,X,Y:BYTE;SND:BOOLEAN);
VAR
   X1,V:BYTE;
BEGIN
     GOTOXY(X,Y);
     V:=VEL;
     FOR X1:=1 TO LENGTH(FRASE) DO
         BEGIN
              IF KEYPRESSED THEN V:=2;
              WRITE(FRASE[X1]);
              IF SND THEN SOUND(RANDOM(VEL*2*X1));
              DELAY(V);
              IF SND THEN NOSOUND;
         END;
END;
PROCEDURE PRINTDN(FRASE:STRING;VEL,X,Y:BYTE;SND:BOOLEAN);
VAR
   Y1,V:BYTE;
BEGIN
     V:=VEL;
     GOTOXY(X,Y);
     FOR Y1:=1 TO LENGTH(FRASE) DO
         BEGIN
              IF KEYPRESSED THEN V:=2;
              WRITE(FRASE[Y1]);
              LN(X);
              IF SND THEN SOUND(RANDOM(VEL*2*Y1));
              DELAY(V);
              IF SND THEN NOSOUND;
         END;
END;
PROCEDURE SHOWMOUSE;
BEGIN
     REGS.AH:=MOUSE[1];
     REGS.AL:=MOUSE[2];
     INTR(MOUSE[4],REGS);
END;
PROCEDURE HIDEMOUSE;
BEGIN
     REGS.AH:=MOUSE[1];
     REGS.AL:=MOUSE[3];
     INTR(MOUSE[4],REGS);
END;
PROCEDURE CURSOR(ESTADO:BYTE);
 PROCEDURE BIGCURSOR;
 VAR
    REGS:REGISTERS;
    PAG:INTEGER;
 BEGIN
      REGS.AH:=$01;
      REGS.CH:=$01;
      REGS.CL:=$00;
      INTR($10,REGS);
 END;
 PROCEDURE NOCURSOR;
 VAR
    REGS:REGISTERS;
    PAG:INTEGER;
 BEGIN
      REGS.AL:=$01;
      REGS.CH:=$70;
      REGS.CL:=$00;
      INTR($10,REGS);
 END;
 PROCEDURE NORMALCURSOR;
 VAR
    REGS:REGISTERS;
    PAG:INTEGER;
 BEGIN
      REGS.AL:=$01;
      REGS.CH:=$06;
      REGS.CL:=$07;
      INTR($10,REGS);
 END;
BEGIN
     CASE ESTADO OF
          0:NOCURSOR;
          1:NORMALCURSOR;
          2:BIGCURSOR;
     ELSE;
     END;
END;
PROCEDURE PAUSE;
VAR
   CH1:CHAR;
BEGIN
     CH1:=READKEY;
END;
PROCEDURE EXECUTE(COMMAND:STRING);
BEGIN
     IF COMMAND<>'' THEN COMMAND:='/C '+COMMAND;
     SWAPVECTORS;
     EXEC(GETENV('COMSPEC'),COMMAND);
     SWAPVECTORS;
     IF DOSERROR<>0 THEN WRITELN('COULD NOT EXECUTE COMMAND.COM');
END;
PROCEDURE SND(FREQ,DEL:WORD);
BEGIN
     SOUND(FREQ);
     DELAY(DEL);
END;
PROCEDURE NO(DEL:WORD);
BEGIN
     NOSOUND;
     DELAY(DEL);
END;
PROCEDURE BEEP;
BEGIN
     SND(700,90);
     NO(0);
END;
PROCEDURE PHONE(DEL:WORD);
VAR
   COUNT:WORD;
BEGIN
     COUNT:=0;
     REPEAT
           COUNT:=COUNT+1;
           SND(2000,100);
           NO(0);
           SND(500,90);
           NO(0);
     UNTIL KEYPRESSED OR  (COUNT>=DEL);
END;

FUNCTION LOCASE(CARACTER:CHAR):CHAR;
BEGIN
     IF CARACTER IN ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
                     'µ','∑','∂','«','é','ê','‘','“','”','÷','ﬁ','◊','ÿ','‡','„','Â','‚','ô','È','Î','Í','ö'] THEN
             LOCASE:=CHR(ORD(CARACTER)+32)
        ELSE LOCASE:=CARACTER;
END;

PROCEDURE HORIZONTAL(X,Y,COMP:BYTE;S1:STRING);
VAR
   CONT:BYTE;
BEGIN
     GOTOXY(X,Y);
     FOR CONT:=X TO X+COMP DO
         WRITE(S1);
END;
PROCEDURE VERTICAL(X,Y,COMP,INT:BYTE;S1:STRING);
VAR
   CONT:BYTE;
BEGIN
     FOR CONT:=Y TO Y+COMP DO
         BEGIN
              GOTOXY(X,CONT);
              WRITE(S1);
              CONT:=CONT+INT;
         END;
END;
PROCEDURE CANTOS(X,Y:BYTE;CH1:CHAR);
BEGIN
     GOTOXY(X,Y);
     WRITE(CH1);
END;
PROCEDURE LOGOTIPO(PROGRAMA:STRING;ANO:WORD);
BEGIN
     TEXTBACKGROUND(0);
     CLRSCR;
     GOTOXY(1,2);
     TEXTCOLOR(10);
     WRITE(PROGRAMA);
     TEXTCOLOR(14);
     WRITE(' SoftStar Inc. (c) ');
     TEXTCOLOR(10);
     WRITELN(ANO);
     TEXTCOLOR(12);
     WRITE('por ');
     TEXTCOLOR(11);
     WRITELN('NUNO MIGUEL B. PICADO');
END;
{PROCEDURE KMUSIC(MODULE:STRING;VOLUME,SOUNDDEVICE,TIMERSPEED,SBDMA,SBIRQ,SBPORT:WORD);
VAR
   SOM:INTEGER;
BEGIN
     LOADOVL('GOLDPLAY.OVL');
     SETSYS(SOUNDDEVICE,TIMERSPEED,SBDMA,SBIRQ,SBPORT);
     INITIALIZE;
     LOADMODULE(MODULE);
     STARTPLAYING;
     MASTERVOLUME(VOLUME);
     INLINE($B8/$3/0/$CD/$10);
END;
PROCEDURE MUSIC(MODULE:STRING;VOLUME:WORD);
VAR
   SOM:INTEGER;
BEGIN
     LOADOVL('GOLDPLAY.OVL');
     ASKINIT;
     INITIALIZE;
     LOADMODULE(MODULE);
     STARTPLAYING;
     MASTERVOLUME(VOLUME);
     INLINE($B8/$3/0/$CD/$10);
END;
PROCEDURE NOMUSIC;
BEGIN
     STOPPLAYING;
     DEALLOC;
     REMOVEOVL;
END;             }

END.